
// nextflow.config

params{
    //General 
    dataDir = "data/"
    resultsDir = "results/"
    publishDirMode = "copy"
    condaEnv = "env/environment.yml"
    mnnModelsDir = "data/mnnModels"
    mnnModelHParams = "data/mnnModels//MNN_ranks_*_.pt"
    mnnModelParams = "MNN_ranks_*_params.npy"
    originalHipStr1001bpFasta = "data/hg38.hipstr_reference.cage.500bp.around3end.fa"
    oneHotSeqFile = "data/hg38all_seqs_raw.npy"
    seqNameFile = "data/hg38all_names_raw.npy"
    mergedResultsFile = "data/merged_results.txt"
}

profiles{
    standard{
        // By default use conda
        conda.enabled = true
        conda.createTimeout = '2 h'
        process.conda = "env/environment.yml"
    }

    ifb{
        //Profile config names for nf-core/configs
        // Use singularity on the IFB core cluster
        params {
            config_profile_description = 'The IFB core cluster profile'
            config_profile_contact = 'https://community.france-bioinformatique.fr'
            config_profile_url = 'https://ifb-elixirfr.gitlab.io/cluster/doc/cluster-desc/'
        }

        singularity {
            enabled = true
            runOptions = '-B /shared'
        }

        process {
            executor = 'slurm'
            // queue = { task.time <= 24.h ? 'fast' : 'long' }
            queue = 'fast'
            cpu = 4
            memory = '24 GB'
            container = "file://env/GeneExprRegBySTR.simg"
        }

        params {
            igenomes_ignore = true
            max_memory = 252.GB
            max_cpus = 56
            max_time = 720.h
        }
    }
    
    local1p{
        // Use conda and limit to 1 fork
        conda.enabled = true
        conda.createTimeout = '2 h'
        process{
            conda = "env/environment.yml"
            maxForks = 1
        }
    }

    local{
        // Use conda and limit to 12 fork
        conda.enabled = true
        conda.createTimeout = '2 h'
        process{
            conda = "env/environment.yml"
            maxForks = 12
        }
    }
}